{"remainingRequest":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DTC PROJECT\\booking\\web\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DTC PROJECT\\booking\\web\\src\\App.vue","mtime":1570011569574},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\DTC PROJECT\\\\booking\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport themeConfig from '@/../themeConfig.js';\nimport servie from '@/service/service';\nexport default {\n  watch: {\n    '$store.state.theme': function $storeStateTheme(val) {\n      this.toggleClassInBody(val);\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var user, role_name;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = service.getUser().user;\n\n              if (user != \"\") {\n                if (user.role_name) {\n                  role_name = service.getUser().user.role_name;\n                  this.$store.dispatch('updateUserRole', role_name);\n                  this.$acl.change(role_name);\n                } else {\n                  this.$store.dispatch('updateUserRole', 'public');\n                  this.$acl.change('public');\n                }\n              } else {\n                this.$store.dispatch('updateUserRole', 'public');\n                this.$acl.change('public');\n              } // this.$acl.change(\"public\");\n\n\n              _context.prev = 2;\n              _context.next = 5;\n              return this.$auth.renewTokens();\n\n            case 5:\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 7]]);\n    }));\n\n    return function created() {\n      return _created.apply(this, arguments);\n    };\n  }(),\n  methods: {\n    toggleClassInBody: function toggleClassInBody(className) {\n      if (className == 'dark') {\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n        document.body.classList.add('theme-dark');\n      } else if (className == 'semi-dark') {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        document.body.classList.add('theme-semi-dark');\n      } else {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n      }\n    },\n    handleWindowResize: function handleWindowResize(event) {\n      this.$store.dispatch('updateWindowWidth', event.currentTarget.innerWidth);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.toggleClassInBody(themeConfig.theme);\n    this.$nextTick(function () {\n      window.addEventListener('resize', _this.handleWindowResize);\n    });\n    this.$store.dispatch('updateWindowWidth', window.innerWidth);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAiBA,OAAA,WAAA,MAAA,qBAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,wBADA,4BACA,GADA,EACA;AACA,WAAA,iBAAA,CAAA,GAAA;AACA;AAHA,GADA;AAMA,EAAA,OANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,cAAA,IAPA,GAOA,OAAA,CAAA,OAAA,GAAA,IAPA;;AASA,kBAAA,IAAA,IAAA,EAAA,EAAA;AACA,oBAAA,IAAA,CAAA,SAAA,EAAA;AACA,kBAAA,SADA,GACA,OAAA,CAAA,OAAA,GAAA,IADA,CACA,SADA;AAEA,uBAAA,MAAA,CAAA,QAAA,CAAA,gBAAA,EAAA,SAAA;AACA,uBAAA,IAAA,CAAA,MAAA,CAAA,SAAA;AAEA,iBALA,MAKA;AAEA,uBAAA,MAAA,CAAA,QAAA,CAAA,gBAAA,EAAA,QAAA;AACA,uBAAA,IAAA,CAAA,MAAA,CAAA,QAAA;AAEA;AACA,eAZA,MAYA;AACA,qBAAA,MAAA,CAAA,QAAA,CAAA,gBAAA,EAAA,QAAA;AACA,qBAAA,IAAA,CAAA,MAAA,CAAA,QAAA;AACA,eAxBA,CAyBA;;;AAzBA;AAAA;AAAA,qBA2BA,KAAA,KAAA,CAAA,WAAA,EA3BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA6BA,cAAA,OAAA,CAAA,GAAA;;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,SADA,EACA;AACA,UAAA,SAAA,IAAA,MAAA,EAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,iBAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,YAAA;AACA,OAHA,MAGA,IAAA,SAAA,IAAA,WAAA,EAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,YAAA,CAAA,EAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,YAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,iBAAA;AACA,OAHA,MAGA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,YAAA,CAAA,EAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,YAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,iBAAA;AACA;AACA,KAZA;AAaA,IAAA,kBAbA,8BAaA,KAbA,EAaA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,aAAA,CAAA,UAAA;AACA;AAfA,GAhCA;AAiDA,EAAA,OAjDA,qBAiDA;AAAA;;AACA,SAAA,iBAAA,CAAA,WAAA,CAAA,KAAA;AACA,SAAA,SAAA,CAAA,YAAA;AACA,MAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,CAAA,kBAAA;AACA,KAFA;AAGA,SAAA,MAAA,CAAA,QAAA,CAAA,mBAAA,EAAA,MAAA,CAAA,UAAA;AACA,GAvDA;AAwDA,EAAA,aAxDA,2BAwDA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,kBAAA;AACA;AA1DA,CAAA","sourcesContent":["<!-- =========================================================================================\n\tFile Name: App.vue\n\tDescription: Main vue file - APP\n\t----------------------------------------------------------------------------------------\n\tItem Name: Vuesax Admin - VueJS Dashboard Admin Template\n\tAuthor: Pixinvent\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n\t<div id=\"app\">\n\t\t<router-view></router-view>\n\t</div>\n</template>\n\n<script>\nimport themeConfig from '@/../themeConfig.js'\nimport servie from '@/service/service';\nexport default {\n  watch: {\n    '$store.state.theme'(val) {\n      this.toggleClassInBody(val);\n    }\n  },\n  async created() {\n    var user=service.getUser().user;\n\n    if(user!=\"\"){\n      if(user.role_name){\n        var {role_name}=service.getUser().user;\n                this.$store.dispatch('updateUserRole', role_name)\n                this.$acl.change(role_name);\n\n      }else{\n\n                this.$store.dispatch('updateUserRole', 'public')\n                this.$acl.change('public');\n\n      }\n    }else{\n         this.$store.dispatch('updateUserRole', 'public')\n                this.$acl.change('public');\n    }\n    // this.$acl.change(\"public\");\n    try {\n      await this.$auth.renewTokens();\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  methods: {\n    toggleClassInBody(className) {\n      if (className == 'dark') {\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n        document.body.classList.add('theme-dark');\n      } else if (className == 'semi-dark') {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        document.body.classList.add('theme-semi-dark');\n      } else {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n      }\n    },\n    handleWindowResize(event) {\n      this.$store.dispatch('updateWindowWidth', event.currentTarget.innerWidth);\n    },\n  },\n  mounted() {\n    this.toggleClassInBody(themeConfig.theme)\n    this.$nextTick(() => {\n      window.addEventListener('resize', this.handleWindowResize);\n    });\n    this.$store.dispatch('updateWindowWidth', window.innerWidth);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  },\n}\n\n</script>\n"],"sourceRoot":"src"}]}